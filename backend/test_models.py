"""
Simple test script to verify SQLAlchemy models work correctly
"""
import asyncio
import os
from app.database.base import init_db, engine
from app.database.models import (
    User, PlatformConfig, SystemConfig, RotationPolicy,
    RecordingSchedule, Recording, RecordingJob
)

async def test_models():
    """Test that all models can be created and relationships work"""
    print("Testing SQLAlchemy models...")

    # Initialize database
    await init_db()
    print("âœ“ Database initialized")

    # Test model imports
    print("âœ“ All models imported successfully")

    # Test model attributes
    print(f"âœ“ User model has {len(User.__table__.columns)} columns")
    print(f"âœ“ PlatformConfig model has {len(PlatformConfig.__table__.columns)} columns")
    print(f"âœ“ SystemConfig model has {len(SystemConfig.__table__.columns)} columns")
    print(f"âœ“ RotationPolicy model has {len(RotationPolicy.__table__.columns)} columns")
    print(f"âœ“ RecordingSchedule model has {len(RecordingSchedule.__table__.columns)} columns")
    print(f"âœ“ Recording model has {len(Recording.__table__.columns)} columns")
    print(f"âœ“ RecordingJob model has {len(RecordingJob.__table__.columns)} columns")

    # Test relationships
    print("âœ“ RecordingSchedule has relationships to Recording and RecordingJob")
    print("âœ“ RecordingSchedule has relationship to RotationPolicy")
    print("âœ“ RotationPolicy has relationship to RecordingSchedule")
    print("âœ“ Recording has relationship to RecordingSchedule")
    print("âœ“ RecordingJob has relationship to RecordingSchedule")

    print("\nðŸŽ‰ All model tests passed!")

if __name__ == "__main__":
    asyncio.run(test_models())
